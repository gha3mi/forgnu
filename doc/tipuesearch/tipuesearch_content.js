var tipuesearch = {"pages":[{"title":" ForGNU ","text":"ForGNU Developer Info Seyed Ali Ghasemi","tags":"home","loc":"index.html"},{"title":"package – ForGNU ","text":"type, public :: package This type represents a software package, with attributes describing its name,\nversion, file format, download link, configuration options, source directory,\nbuild directory, installation directory, and prerequisites (required packages\nand modules). It also includes procedures for downloading, extracting, configuring,\nbuilding, and installing the package, as well as for installing prerequisites. Contents Variables name version file_format download_link configure_options src_dir src_path build_dir install_dir prereqpackages prereqmodules Type-Bound Procedures set_name set_version set_file_format set_download_link set_configure_options set_src_dir set_install_dir set_src_path set_build_dir set_prereqpackages set_prereqmodules apt_install module_load download extract prerequisites make_build_dir configure build install dlloc Source Code package Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: name character(len=:), public, allocatable :: version character(len=:), public, allocatable :: file_format character(len=:), public, allocatable :: download_link character(len=:), public, allocatable :: configure_options character(len=:), public, allocatable :: src_dir character(len=:), public, allocatable :: src_path character(len=:), public, allocatable :: build_dir character(len=:), public, allocatable :: install_dir character(len=:), public, allocatable :: prereqpackages character(len=:), public, allocatable :: prereqmodules Type-Bound Procedures procedure, public :: set_name private pure elemental subroutine set_name (this, name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: name procedure, public :: set_version private pure elemental subroutine set_version (this, version) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: version procedure, public :: set_file_format private pure elemental subroutine set_file_format (this, file_format) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: file_format procedure, public :: set_download_link private pure elemental subroutine set_download_link (this, download_link) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: download_link procedure, public :: set_configure_options private pure elemental subroutine set_configure_options (this, configure_options) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: configure_options procedure, public :: set_src_dir private pure elemental subroutine set_src_dir (this, src_dir) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: src_dir procedure, public :: set_install_dir private pure elemental subroutine set_install_dir (this, install_dir) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: install_dir procedure, public :: set_src_path private pure elemental subroutine set_src_path (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this procedure, public :: set_build_dir private pure elemental subroutine set_build_dir (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this procedure, public :: set_prereqpackages private pure elemental subroutine set_prereqpackages (this, prereqpackages) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: prereqpackages procedure, public :: set_prereqmodules private pure elemental subroutine set_prereqmodules (this, prereqmodules) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: prereqmodules procedure, public :: apt_install private impure elemental subroutine apt_install (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this procedure, public :: module_load private impure elemental subroutine module_load (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this procedure, public :: download private impure elemental subroutine download (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this procedure, public :: extract private impure elemental subroutine extract (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this procedure, public :: prerequisites private impure elemental subroutine prerequisites (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this procedure, public :: make_build_dir private impure elemental subroutine make_build_dir (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this procedure, public :: configure private impure elemental subroutine configure (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this procedure, public :: build private impure elemental subroutine build (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this procedure, public :: install private impure elemental subroutine install (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this procedure, public :: dlloc private pure elemental subroutine dlloc (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this Source Code type :: package character ( len = :), allocatable :: name ! Name of the package character ( len = :), allocatable :: version ! Version of the package character ( len = :), allocatable :: file_format ! File format of the package character ( len = :), allocatable :: download_link ! Download link for the package character ( len = :), allocatable :: configure_options ! Configuration options for the package character ( len = :), allocatable :: src_dir ! Directory for the package source code character ( len = :), allocatable :: src_path ! Path for the package source code character ( len = :), allocatable :: build_dir ! Directory for the package build character ( len = :), allocatable :: install_dir ! Directory for the package installation character ( len = :), allocatable :: prereqpackages ! Required packages for the package character ( len = :), allocatable :: prereqmodules ! Required modules for the package contains ! Procedures for setting attributes procedure :: set_name ! Set the name of the package procedure :: set_version ! Set the version of the package procedure :: set_file_format ! Set the file format of the package procedure :: set_download_link ! Set the download link for the package procedure :: set_configure_options ! Set the configuration options for the package procedure :: set_src_dir ! Set the directory for the package source code procedure :: set_install_dir ! Set the directory for the package installation procedure :: set_src_path ! Set the path for the package source code procedure :: set_build_dir ! Set the directory for the package build procedure :: set_prereqpackages ! Set the required packages for the package procedure :: set_prereqmodules ! Set the required modules for the package ! Procedures for installing and setting prerequisites procedure :: apt_install ! Install required packages using apt-get procedure :: module_load ! Load required modules using module load ! Procedures for package management procedure :: download ! Download the package source code procedure :: extract ! Extract the package source code procedure :: prerequisites ! Install required packages and modules procedure :: make_build_dir ! Create the directory for the package build procedure :: configure ! Configure the package procedure :: build ! Build the package procedure :: install ! Install the package ! Procedures for deallocating memory procedure :: dlloc ! Deallocates memory end type package","tags":"","loc":"type/package.html"},{"title":"set_name – ForGNU","text":"private pure elemental subroutine set_name(this, name) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: name Contents Source Code set_name Source Code elemental pure subroutine set_name ( this , name ) class ( package ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: name this % name = name end subroutine set_name","tags":"","loc":"proc/set_name.html"},{"title":"set_version – ForGNU","text":"private pure elemental subroutine set_version(this, version) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: version Contents Source Code set_version Source Code elemental pure subroutine set_version ( this , version ) class ( package ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: version this % version = version end subroutine set_version","tags":"","loc":"proc/set_version.html"},{"title":"set_file_format – ForGNU","text":"private pure elemental subroutine set_file_format(this, file_format) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: file_format Contents Source Code set_file_format Source Code elemental pure subroutine set_file_format ( this , file_format ) class ( package ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_format this % file_format = file_format end subroutine set_file_format","tags":"","loc":"proc/set_file_format.html"},{"title":"set_download_link – ForGNU","text":"private pure elemental subroutine set_download_link(this, download_link) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: download_link Contents Source Code set_download_link Source Code elemental pure subroutine set_download_link ( this , download_link ) class ( package ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: download_link this % download_link = download_link end subroutine set_download_link","tags":"","loc":"proc/set_download_link.html"},{"title":"set_configure_options – ForGNU","text":"private pure elemental subroutine set_configure_options(this, configure_options) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: configure_options Contents Source Code set_configure_options Source Code elemental pure subroutine set_configure_options ( this , configure_options ) class ( package ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: configure_options this % configure_options = configure_options end subroutine set_configure_options","tags":"","loc":"proc/set_configure_options.html"},{"title":"set_src_dir – ForGNU","text":"private pure elemental subroutine set_src_dir(this, src_dir) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: src_dir Contents Source Code set_src_dir Source Code elemental pure subroutine set_src_dir ( this , src_dir ) class ( package ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: src_dir this % src_dir = src_dir end subroutine set_src_dir","tags":"","loc":"proc/set_src_dir.html"},{"title":"set_install_dir – ForGNU","text":"private pure elemental subroutine set_install_dir(this, install_dir) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: install_dir Contents Source Code set_install_dir Source Code elemental pure subroutine set_install_dir ( this , install_dir ) class ( package ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: install_dir this % install_dir = install_dir end subroutine set_install_dir","tags":"","loc":"proc/set_install_dir.html"},{"title":"set_prereqpackages – ForGNU","text":"private pure elemental subroutine set_prereqpackages(this, prereqpackages) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: prereqpackages Contents Source Code set_prereqpackages Source Code elemental pure subroutine set_prereqpackages ( this , prereqpackages ) class ( package ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: prereqpackages this % prereqpackages = prereqpackages end subroutine set_prereqpackages","tags":"","loc":"proc/set_prereqpackages.html"},{"title":"set_prereqmodules – ForGNU","text":"private pure elemental subroutine set_prereqmodules(this, prereqmodules) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: prereqmodules Contents Source Code set_prereqmodules Source Code elemental pure subroutine set_prereqmodules ( this , prereqmodules ) class ( package ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: prereqmodules this % prereqmodules = prereqmodules end subroutine set_prereqmodules","tags":"","loc":"proc/set_prereqmodules.html"},{"title":"set_src_path – ForGNU","text":"private pure elemental subroutine set_src_path(this) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this Contents Source Code set_src_path Source Code elemental pure subroutine set_src_path ( this ) class ( package ), intent ( inout ) :: this integer :: exstat ! Set src path this % src_path = this % src_dir // \"/\" // this % name // \"-\" // this % version end subroutine set_src_path","tags":"","loc":"proc/set_src_path.html"},{"title":"apt_install – ForGNU","text":"private impure elemental subroutine apt_install(this) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this Contents Source Code apt_install Source Code elemental impure subroutine apt_install ( this ) class ( package ), intent ( inout ) :: this integer :: exstat ! ! Install required packages ! call execute_command_line(\"apt-get install \"& !    //this%prereqpackages & !    , exitstat=exstat) ! ! Check if installation was successful ! if (exstat /= 0) then !    error stop \": Failed to install required packages. Please check the package names and try again.\" ! else !    print*,\"Required packages installed successfully.\" ! endif end subroutine apt_install","tags":"","loc":"proc/apt_install.html"},{"title":"module_load – ForGNU","text":"private impure elemental subroutine module_load(this) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this Contents Source Code module_load Source Code elemental impure subroutine module_load ( this ) class ( package ), intent ( inout ) :: this integer :: exstat ! ! Load the required modules ! call execute_command_line(\"ml -s \"& !    //this%prereqmodules & !    , exitstat=exstat) ! ! Check if the loading was successful ! if (exstat /= 0) then !    error stop \": Failed to load required modules. Please check the module names and try again.\" ! else !    print*,\"Required modules loaded successfully.\" ! endif end subroutine module_load","tags":"","loc":"proc/module_load.html"},{"title":"download – ForGNU","text":"private impure elemental subroutine download(this) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this Contents Source Code download Source Code elemental impure subroutine download ( this ) class ( package ), intent ( inout ) :: this integer :: exstat ! Download the package call execute_command_line ( \"wget --output-document=\" & // this % src_path // this % file_format // \" \" // this % download_link & , exitstat = exstat ) ! Check if download was successful if ( exstat /= 0 ) then error stop \": File download failed. Please check the download link and try again.\" else print * , \"Package downloaded successfully.\" endif end subroutine download","tags":"","loc":"proc/download.html"},{"title":"extract – ForGNU","text":"private impure elemental subroutine extract(this) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this Contents Source Code extract Source Code elemental impure subroutine extract ( this ) class ( package ), intent ( inout ) :: this integer :: exstat ! Create directory for extraction call execute_command_line ( \"mkdir -p \" // this % src_path & , exitstat = exstat ) ! Check if directory creation was successful if ( exstat /= 0 ) then error stop \": Failed to create directory for extraction. Please check the source directory and try again.\" else print * , \"Directory for extraction created successfully.\" endif ! Extract the package select case ( this % file_format ) case ( \".tar.gz\" ) call execute_command_line ( \"tar xf \" // this % src_path // this % file_format // & \" -C \" // this % src_dir // \"/\" // this % name // \"-\" // this % version // \" --strip-components 1\" & , exitstat = exstat ) end select ! Check if extraction was successful if ( exstat /= 0 ) then error stop \": Failed to extract package. Please check the downloaded file and try again.\" else print * , \"Package extracted successfully.\" endif end subroutine extract","tags":"","loc":"proc/extract.html"},{"title":"prerequisites – ForGNU","text":"private impure elemental subroutine prerequisites(this) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this Contents Source Code prerequisites Source Code elemental impure subroutine prerequisites ( this ) class ( package ), intent ( inout ) :: this integer :: exstat ! Download the prerequisites call execute_command_line ( \"cd \" // this % src_path // \" && ./contrib/download_prerequisites\" & , exitstat = exstat ) ! Check if download was successful if ( exstat /= 0 ) then error stop \": Failed to download prerequisites. Please check the source directory and try again.\" else print * , \"Prerequisites downloaded successfully.\" endif end subroutine prerequisites","tags":"","loc":"proc/prerequisites.html"},{"title":"set_build_dir – ForGNU","text":"private pure elemental subroutine set_build_dir(this) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this Contents Source Code set_build_dir Source Code elemental pure subroutine set_build_dir ( this ) class ( package ), intent ( inout ) :: this integer :: exstat this % build_dir = this % src_path // \"-build\" end subroutine set_build_dir","tags":"","loc":"proc/set_build_dir.html"},{"title":"make_build_dir – ForGNU","text":"private impure elemental subroutine make_build_dir(this) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this Contents Source Code make_build_dir Source Code elemental impure subroutine make_build_dir ( this ) class ( package ), intent ( inout ) :: this integer :: exstat ! Create the build directory call execute_command_line ( \"mkdir -p \" // this % build_dir & , exitstat = exstat ) ! Check if directory creation was successful if ( exstat /= 0 ) then error stop \": Failed to create build directory. Please check the source directory and try again.\" else print * , \"Build directory created successfully.\" endif end subroutine make_build_dir","tags":"","loc":"proc/make_build_dir.html"},{"title":"configure – ForGNU","text":"private impure elemental subroutine configure(this) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this Contents Source Code configure Source Code elemental impure subroutine configure ( this ) class ( package ), intent ( inout ) :: this integer :: exstat ! Configure call execute_command_line ( \"cd \" // this % build_dir // & \" && \" // this % src_path // & \"/configure --prefix=\" // this % install_dir // \" \" // this % configure_options & , exitstat = exstat ) if ( exstat /= 0 ) then error stop \": Configuration failed. Please check the downloaded files and try again.\" else print * , \"Configuration completed successfully.\" endif end subroutine configure","tags":"","loc":"proc/configure.html"},{"title":"build – ForGNU","text":"private impure elemental subroutine build(this) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this Contents Source Code build Source Code elemental impure subroutine build ( this ) class ( package ), intent ( inout ) :: this integer :: exstat call execute_command_line ( \"cd \" // this % build_dir // \" && \" // \"make -j $(nproc)\" & , exitstat = exstat ) if ( exstat /= 0 ) then error stop \": Build failed. Please check the configuration and try again.\" else print * , \"Build completed successfully.\" endif end subroutine build","tags":"","loc":"proc/build.html"},{"title":"install – ForGNU","text":"private impure elemental subroutine install(this) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this Contents Source Code install Source Code elemental impure subroutine install ( this ) class ( package ), intent ( inout ) :: this integer :: exstat ! make install call execute_command_line ( \"cd \" // this % build_dir // \" && \" // \"make install\" & , exitstat = exstat ) if ( exstat /= 0 ) then error stop \": Package installation failed. Please check the prerequisite packages and try again.\" else print * , \"Package installed successfully.\" endif end subroutine install","tags":"","loc":"proc/install.html"},{"title":"dlloc – ForGNU","text":"private pure elemental subroutine dlloc(this) Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this Contents Source Code dlloc Source Code elemental pure subroutine dlloc ( this ) class ( package ), intent ( inout ) :: this if ( allocated ( this % name )) deallocate ( this % name ) if ( allocated ( this % version )) deallocate ( this % version ) if ( allocated ( this % file_format )) deallocate ( this % file_format ) if ( allocated ( this % download_link )) deallocate ( this % download_link ) if ( allocated ( this % configure_options )) deallocate ( this % configure_options ) if ( allocated ( this % src_dir )) deallocate ( this % src_dir ) if ( allocated ( this % src_path )) deallocate ( this % src_path ) if ( allocated ( this % build_dir )) deallocate ( this % build_dir ) if ( allocated ( this % install_dir )) deallocate ( this % install_dir ) if ( allocated ( this % prereqpackages )) deallocate ( this % prereqpackages ) if ( allocated ( this % prereqmodules )) deallocate ( this % prereqmodules ) end subroutine dlloc","tags":"","loc":"proc/dlloc.html"},{"title":"forgnu – ForGNU","text":"Contents Derived Types package Subroutines set_name set_version set_file_format set_download_link set_configure_options set_src_dir set_install_dir set_prereqpackages set_prereqmodules set_src_path apt_install module_load download extract prerequisites set_build_dir make_build_dir configure build install dlloc Derived Types type, public :: package This type represents a software package, with attributes describing its name,\nversion, file format, download link, configuration options, source directory,\nbuild directory, installation directory, and prerequisites (required packages\nand modules). It also includes procedures for downloading, extracting, configuring,\nbuilding, and installing the package, as well as for installing prerequisites. Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: name character(len=:), public, allocatable :: version character(len=:), public, allocatable :: file_format character(len=:), public, allocatable :: download_link character(len=:), public, allocatable :: configure_options character(len=:), public, allocatable :: src_dir character(len=:), public, allocatable :: src_path character(len=:), public, allocatable :: build_dir character(len=:), public, allocatable :: install_dir character(len=:), public, allocatable :: prereqpackages character(len=:), public, allocatable :: prereqmodules Type-Bound Procedures procedure\n                    ,                  public\n                  :: set_name Subroutine procedure\n                    ,                  public\n                  :: set_version Subroutine procedure\n                    ,                  public\n                  :: set_file_format Subroutine procedure\n                    ,                  public\n                  :: set_download_link Subroutine procedure\n                    ,                  public\n                  :: set_configure_options Subroutine procedure\n                    ,                  public\n                  :: set_src_dir Subroutine procedure\n                    ,                  public\n                  :: set_install_dir Subroutine procedure\n                    ,                  public\n                  :: set_src_path Subroutine procedure\n                    ,                  public\n                  :: set_build_dir Subroutine procedure\n                    ,                  public\n                  :: set_prereqpackages Subroutine procedure\n                    ,                  public\n                  :: set_prereqmodules Subroutine procedure\n                    ,                  public\n                  :: apt_install Subroutine procedure\n                    ,                  public\n                  :: module_load Subroutine procedure\n                    ,                  public\n                  :: download Subroutine procedure\n                    ,                  public\n                  :: extract Subroutine procedure\n                    ,                  public\n                  :: prerequisites Subroutine procedure\n                    ,                  public\n                  :: make_build_dir Subroutine procedure\n                    ,                  public\n                  :: configure Subroutine procedure\n                    ,                  public\n                  :: build Subroutine procedure\n                    ,                  public\n                  :: install Subroutine procedure\n                    ,                  public\n                  :: dlloc Subroutine Subroutines private pure elemental subroutine set_name (this, name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: name private pure elemental subroutine set_version (this, version) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: version private pure elemental subroutine set_file_format (this, file_format) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: file_format private pure elemental subroutine set_download_link (this, download_link) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: download_link private pure elemental subroutine set_configure_options (this, configure_options) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: configure_options private pure elemental subroutine set_src_dir (this, src_dir) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: src_dir private pure elemental subroutine set_install_dir (this, install_dir) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: install_dir private pure elemental subroutine set_prereqpackages (this, prereqpackages) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: prereqpackages private pure elemental subroutine set_prereqmodules (this, prereqmodules) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this character(len=*), intent(in) :: prereqmodules private pure elemental subroutine set_src_path (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this private impure elemental subroutine apt_install (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this private impure elemental subroutine module_load (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this private impure elemental subroutine download (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this private impure elemental subroutine extract (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this private impure elemental subroutine prerequisites (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this private pure elemental subroutine set_build_dir (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this private impure elemental subroutine make_build_dir (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this private impure elemental subroutine configure (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this private impure elemental subroutine build (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this private impure elemental subroutine install (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this private pure elemental subroutine dlloc (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( package ), intent(inout) :: this","tags":"","loc":"module/forgnu.html"},{"title":"forgnu.f90 – ForGNU","text":"Contents Modules forgnu Source Code forgnu.f90 Source Code !> author: Seyed Ali Ghasemi module forgnu implicit none private public :: package !=============================================================================== !> This type represents a software package, with attributes describing its name, !> version, file format, download link, configuration options, source directory, !> build directory, installation directory, and prerequisites (required packages !> and modules). It also includes procedures for downloading, extracting, configuring, !> building, and installing the package, as well as for installing prerequisites. type :: package character ( len = :), allocatable :: name ! Name of the package character ( len = :), allocatable :: version ! Version of the package character ( len = :), allocatable :: file_format ! File format of the package character ( len = :), allocatable :: download_link ! Download link for the package character ( len = :), allocatable :: configure_options ! Configuration options for the package character ( len = :), allocatable :: src_dir ! Directory for the package source code character ( len = :), allocatable :: src_path ! Path for the package source code character ( len = :), allocatable :: build_dir ! Directory for the package build character ( len = :), allocatable :: install_dir ! Directory for the package installation character ( len = :), allocatable :: prereqpackages ! Required packages for the package character ( len = :), allocatable :: prereqmodules ! Required modules for the package contains ! Procedures for setting attributes procedure :: set_name ! Set the name of the package procedure :: set_version ! Set the version of the package procedure :: set_file_format ! Set the file format of the package procedure :: set_download_link ! Set the download link for the package procedure :: set_configure_options ! Set the configuration options for the package procedure :: set_src_dir ! Set the directory for the package source code procedure :: set_install_dir ! Set the directory for the package installation procedure :: set_src_path ! Set the path for the package source code procedure :: set_build_dir ! Set the directory for the package build procedure :: set_prereqpackages ! Set the required packages for the package procedure :: set_prereqmodules ! Set the required modules for the package ! Procedures for installing and setting prerequisites procedure :: apt_install ! Install required packages using apt-get procedure :: module_load ! Load required modules using module load ! Procedures for package management procedure :: download ! Download the package source code procedure :: extract ! Extract the package source code procedure :: prerequisites ! Install required packages and modules procedure :: make_build_dir ! Create the directory for the package build procedure :: configure ! Configure the package procedure :: build ! Build the package procedure :: install ! Install the package ! Procedures for deallocating memory procedure :: dlloc ! Deallocates memory end type package !=============================================================================== contains !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_name ( this , name ) class ( package ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: name this % name = name end subroutine set_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_version ( this , version ) class ( package ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: version this % version = version end subroutine set_version !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_file_format ( this , file_format ) class ( package ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_format this % file_format = file_format end subroutine set_file_format !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_download_link ( this , download_link ) class ( package ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: download_link this % download_link = download_link end subroutine set_download_link !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_configure_options ( this , configure_options ) class ( package ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: configure_options this % configure_options = configure_options end subroutine set_configure_options !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_src_dir ( this , src_dir ) class ( package ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: src_dir this % src_dir = src_dir end subroutine set_src_dir !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_install_dir ( this , install_dir ) class ( package ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: install_dir this % install_dir = install_dir end subroutine set_install_dir !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_prereqpackages ( this , prereqpackages ) class ( package ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: prereqpackages this % prereqpackages = prereqpackages end subroutine set_prereqpackages !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_prereqmodules ( this , prereqmodules ) class ( package ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: prereqmodules this % prereqmodules = prereqmodules end subroutine set_prereqmodules !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_src_path ( this ) class ( package ), intent ( inout ) :: this integer :: exstat ! Set src path this % src_path = this % src_dir // \"/\" // this % name // \"-\" // this % version end subroutine set_src_path !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine apt_install ( this ) class ( package ), intent ( inout ) :: this integer :: exstat ! ! Install required packages ! call execute_command_line(\"apt-get install \"& !    //this%prereqpackages & !    , exitstat=exstat) ! ! Check if installation was successful ! if (exstat /= 0) then !    error stop \": Failed to install required packages. Please check the package names and try again.\" ! else !    print*,\"Required packages installed successfully.\" ! endif end subroutine apt_install !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine module_load ( this ) class ( package ), intent ( inout ) :: this integer :: exstat ! ! Load the required modules ! call execute_command_line(\"ml -s \"& !    //this%prereqmodules & !    , exitstat=exstat) ! ! Check if the loading was successful ! if (exstat /= 0) then !    error stop \": Failed to load required modules. Please check the module names and try again.\" ! else !    print*,\"Required modules loaded successfully.\" ! endif end subroutine module_load !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine download ( this ) class ( package ), intent ( inout ) :: this integer :: exstat ! Download the package call execute_command_line ( \"wget --output-document=\" & // this % src_path // this % file_format // \" \" // this % download_link & , exitstat = exstat ) ! Check if download was successful if ( exstat /= 0 ) then error stop \": File download failed. Please check the download link and try again.\" else print * , \"Package downloaded successfully.\" endif end subroutine download !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine extract ( this ) class ( package ), intent ( inout ) :: this integer :: exstat ! Create directory for extraction call execute_command_line ( \"mkdir -p \" // this % src_path & , exitstat = exstat ) ! Check if directory creation was successful if ( exstat /= 0 ) then error stop \": Failed to create directory for extraction. Please check the source directory and try again.\" else print * , \"Directory for extraction created successfully.\" endif ! Extract the package select case ( this % file_format ) case ( \".tar.gz\" ) call execute_command_line ( \"tar xf \" // this % src_path // this % file_format // & \" -C \" // this % src_dir // \"/\" // this % name // \"-\" // this % version // \" --strip-components 1\" & , exitstat = exstat ) end select ! Check if extraction was successful if ( exstat /= 0 ) then error stop \": Failed to extract package. Please check the downloaded file and try again.\" else print * , \"Package extracted successfully.\" endif end subroutine extract !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine prerequisites ( this ) class ( package ), intent ( inout ) :: this integer :: exstat ! Download the prerequisites call execute_command_line ( \"cd \" // this % src_path // \" && ./contrib/download_prerequisites\" & , exitstat = exstat ) ! Check if download was successful if ( exstat /= 0 ) then error stop \": Failed to download prerequisites. Please check the source directory and try again.\" else print * , \"Prerequisites downloaded successfully.\" endif end subroutine prerequisites !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_build_dir ( this ) class ( package ), intent ( inout ) :: this integer :: exstat this % build_dir = this % src_path // \"-build\" end subroutine set_build_dir !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine make_build_dir ( this ) class ( package ), intent ( inout ) :: this integer :: exstat ! Create the build directory call execute_command_line ( \"mkdir -p \" // this % build_dir & , exitstat = exstat ) ! Check if directory creation was successful if ( exstat /= 0 ) then error stop \": Failed to create build directory. Please check the source directory and try again.\" else print * , \"Build directory created successfully.\" endif end subroutine make_build_dir !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine configure ( this ) class ( package ), intent ( inout ) :: this integer :: exstat ! Configure call execute_command_line ( \"cd \" // this % build_dir // & \" && \" // this % src_path // & \"/configure --prefix=\" // this % install_dir // \" \" // this % configure_options & , exitstat = exstat ) if ( exstat /= 0 ) then error stop \": Configuration failed. Please check the downloaded files and try again.\" else print * , \"Configuration completed successfully.\" endif end subroutine configure !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine build ( this ) class ( package ), intent ( inout ) :: this integer :: exstat call execute_command_line ( \"cd \" // this % build_dir // \" && \" // \"make -j $(nproc)\" & , exitstat = exstat ) if ( exstat /= 0 ) then error stop \": Build failed. Please check the configuration and try again.\" else print * , \"Build completed successfully.\" endif end subroutine build !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine install ( this ) class ( package ), intent ( inout ) :: this integer :: exstat ! make install call execute_command_line ( \"cd \" // this % build_dir // \" && \" // \"make install\" & , exitstat = exstat ) if ( exstat /= 0 ) then error stop \": Package installation failed. Please check the prerequisite packages and try again.\" else print * , \"Package installed successfully.\" endif end subroutine install !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine dlloc ( this ) class ( package ), intent ( inout ) :: this if ( allocated ( this % name )) deallocate ( this % name ) if ( allocated ( this % version )) deallocate ( this % version ) if ( allocated ( this % file_format )) deallocate ( this % file_format ) if ( allocated ( this % download_link )) deallocate ( this % download_link ) if ( allocated ( this % configure_options )) deallocate ( this % configure_options ) if ( allocated ( this % src_dir )) deallocate ( this % src_dir ) if ( allocated ( this % src_path )) deallocate ( this % src_path ) if ( allocated ( this % build_dir )) deallocate ( this % build_dir ) if ( allocated ( this % install_dir )) deallocate ( this % install_dir ) if ( allocated ( this % prereqpackages )) deallocate ( this % prereqpackages ) if ( allocated ( this % prereqmodules )) deallocate ( this % prereqmodules ) end subroutine dlloc !=============================================================================== end module forgnu","tags":"","loc":"sourcefile/forgnu.f90.html"}]}